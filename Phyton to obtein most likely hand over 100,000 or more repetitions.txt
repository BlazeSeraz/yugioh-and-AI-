import random
import collections

deck = ['Raiza the Mega Monarch',
        'Mist Valley Apex Avian',
        'Floowandereeze & Empen',
        'Floowandereeze & Empen',
        'Floowandereeze & Eglen',
        'Floowandereeze & Eglen',
        'Floowandereeze & Eglen',
        'Floowandereeze & Stri',
        'Floowandereeze & Robina',
        'Floowandereeze & Robina',
        'Floowandereeze & Robina',
        'Floowandereeze & Toccan',
        'Floowandereeze and the Unexplored Winds',
        'Floowandereeze and the Unexplored Winds',
        'Floowandereeze and the Magnificent Map',
        'Floowandereeze and the Magnificent Map',
        'Floowandereeze and the Magnificent Map',
        'Floowandereeze and the Dreaming Town',
        'Pot of Duality',
        'Pot of Duality',
        'Pot of Duality',
        'Pot of Prosperity',
        'Pot of Prosperity',
        'Book of Moon',
        'Book of Moon',
        'Book of Moon',
        'Terraforming',
        'Jack-In-The-Hand',
        'Jack-In-The-Hand',
        'Nibiru, the Primal Being',
        'Nibiru, the Primal Being',
        'Nibiru, the Primal Being',
        'Forbidden Chalice',
        'Ash Blossom & Joyous Spring',
        'Ash Blossom & Joyous Spring',
        'Ash Blossom & Joyous Spring']

def draw_hand(deck, size):
    hand = random.sample(deck, size)
    if 'Pot of Prosperity' in hand:
        hand.remove('Pot of Prosperity')
        hand += random.sample(deck, 2)
    return hand

def simulate_hands(deck, size, trials):
    outcomes = []
    for i in range(trials):
        hand = draw_hand(deck, size)
        outcomes.append(tuple(sorted(hand)))
    return outcomes

def most_common_hands(outcomes, num_hands):
    counter = collections.Counter(outcomes)
    return counter.most_common(num_hands)

# Run simulation
trials = 10000
size = 5
outcomes = simulate_hands(deck, size, trials)

# Print most common hands
num_hands = 10
most_common = most_common_hands(outcomes, num_hands)
for hand, count in most_common:
    print(f'{count/trials:.4%} chance to get {hand} in a hand of {size} cards')
